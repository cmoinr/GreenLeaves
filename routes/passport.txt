const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const LocalStrategy = require('passport-local').Strategy;
const bcrypt = require('bcrypt');
const User = require('./models/User');

passport.use(new LocalStrategy(
    (username, password, done) => {
      User.findByUsername(username, (err, user) => {
        if (err) {
          return done(err);
        }
        if (!user) {
          return done(null, false, { message: 'Nombre de usuario incorrecto.' });
        }
        bcrypt.compare(password, user.password_hash, (err, result) => {
          if (err) {
            return done(err);
          }
          if (!result) {
            return done(null, false, { message: 'Contraseña incorrecta.' });
          }
          return done(null, user);
        });
      });
    }
  ));

passport.use(new GoogleStrategy({
    clientID: process.env.CLIENT_ID_OAUTH,
    clientSecret: process.env.CLIENT_SECRET_OAUTH,
    callbackURL: "https://developers.google.com/oauthplayground"
  },
  function(accessToken, refreshToken, profile, done) {
    // Aquí puedes guardar la información del usuario en tu base de datos
    // o realizar cualquier otra acción necesaria.
    // profile contiene la información del usuario de Google.

    // Ejemplo:
    const user = {
      googleId: profile.id,
      displayName: profile.displayName,
      email: profile.emails[0].value // Si el usuario tiene múltiples correos, puedes acceder al primero.
    };

    return done(null, user);
  }
));

passport.serializeUser((user, done) => {
  done(null, user);
});

passport.deserializeUser((user, done) => {
  done(null, user);
});

module.exports = passport;
